# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/trusty64"
  # config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 8888, host: 8888
  config.vm.network "forwarded_port", guest: 5000, host: 5000
  # config.vm.synced_folder "work", "/home/vagrant/work"

  config.vm.provider "virtualbox" do |vb|
    vb.name = "ubuntn14"
    vb.memory = "1024"
  end

  config.vm.provision "shell", inline: <<-SHELL
    # setup dotfiles
    sudo apt-get -y -qq install git
    mkdir -p ~/apps/
    if [ ! -d "/home/vagrant/apps/dotfiles" ]; then
      git clone https://github.com/patelkunal/dotfiles.git --recursive /home/vagrant/apps/dotfiles
	  # change dotfiles folder permission for vagrant user
	  chown -R vagrant:vagrant /home/vagrant/apps/

	  # make use of dotfiles / install all configs
	  ln -sf home/vagrant/apps/dotfiles/vim/vimrc /home/vagrant/.vimrc
	  ln -sf /home/vagrant/apps/dotfiles/vim/vim /home/vagrant/.vim
	  ln -sf /home/vagrant/apps/dotfiles/git/.gitconfig /home/vagrant/.gitconfig
	  echo ". /home/vagrant/apps/dotfiles/bash/user.bashrc" >> /home/vagrant/.bashrc
	else
	  echo "dotfiles are already configured, skipping !!!"
	fi

    # add apt-repository in this block
    sudo add-apt-repository -y ppa:webupd8team/java > /dev/null 2>&1

    # after newly added repo, this is required
    sudo apt-get -qq update

	# this is optional BTW,
    # sudo apt-get -y upgrade

    # installing java8 using apt-get install
    echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
    echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections
    sudo apt-get -y -qq install oracle-java8-installer

	# install python - preferably miniconda
	if [ ! -d "/opt/py3/" ]; then
	  echo "installing python (miniconda distribution !!)"
	  curl -s https://repo.continuum.io/miniconda/Miniconda3-4.0.5-Linux-x86_64.sh -o miniconda.sh || exit 1
	  bash miniconda.sh -b -f -p /opt/py3 > /dev/null 2>&1 || exit 1
	  rm miniconda.sh || exit 1
	else
	  echo "python (miniconda distribution) is already installed, skipping !! "
	fi
  SHELL
end

